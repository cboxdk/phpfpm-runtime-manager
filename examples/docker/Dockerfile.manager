# PHP-FPM Runtime Manager Docker Image
# Multi-stage build for optimized production image

# Build stage
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

WORKDIR /build

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY cmd/ ./cmd/
COPY internal/ ./internal/

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo \
    -ldflags='-w -s -extldflags "-static"' \
    -o phpfpm-manager ./cmd/phpfpm-manager

# Production stage
FROM alpine:3.18

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    curl \
    sqlite

# Create non-root user
RUN addgroup -g 1001 -S phpfpm && \
    adduser -u 1001 -S phpfpm -G phpfpm

# Create directories
RUN mkdir -p /app/data /app/logs /app/config && \
    chown -R phpfpm:phpfpm /app

# Copy binary from builder
COPY --from=builder /build/phpfpm-manager /app/phpfpm-manager
RUN chmod +x /app/phpfpm-manager

# Copy default configuration
COPY examples/docker/config/manager.yaml /app/config/default.yaml

# Switch to non-root user
USER phpfpm

WORKDIR /app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:9090/health || exit 1

# Expose port
EXPOSE 9090

# Default command
CMD ["./phpfpm-manager", "-config", "/app/config.yaml"]