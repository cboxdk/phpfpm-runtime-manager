# Full PHP-FPM Runtime Manager Configuration
# Every available configuration option with explanations

# ═══════════════════════════════════════════════════════════════════════════════
# 🚨 CRITICAL: PHP-FPM GLOBAL CONFIGURATION
# The manager WILL OVERWRITE the global config to enable dynamic pool management
# ═══════════════════════════════════════════════════════════════════════════════
phpfpm:
  # Path to main PHP-FPM configuration file
  # ⚠️ WARNING: This file will be modified by the manager!
  # All related files (logs, PID) will be placed in the same directory
  global_config_path: "/opt/phpfpm-runtime-manager/php-fpm.conf"

  # Optional: Custom include path for pool configs
  # If not specified, defaults to /opt/phpfpm-runtime-manager/pools.d/*.conf
  include_path: "/opt/phpfpm-runtime-manager/pools.d"

# ═══════════════════════════════════════════════════════════════════════════════
# SERVER CONFIGURATION
# HTTP server settings for metrics and health endpoints
# ═══════════════════════════════════════════════════════════════════════════════
server:
  # Address and port to bind the HTTP server
  bind_address: "127.0.0.1:9090"

  # Path for Prometheus metrics endpoint
  metrics_path: "/metrics"

  # Health check endpoint path
  health_path: "/health"

  # TLS/SSL configuration
  tls:
    enabled: false
    cert_file: "/etc/ssl/certs/server.crt"
    key_file: "/etc/ssl/private/server.key"
    min_version: "1.2"
    max_version: "1.3"

  # Authentication configuration
  auth:
    enabled: false
    type: "api_key"  # Options: api_key, basic, mtls

    # API Key authentication
    api_key: "your-secure-api-key-here"

    # Basic authentication
    basic:
      username: "admin"
      password: "secure-password-here"

    # Mutual TLS authentication
    mtls:
      ca_file: "/etc/ssl/ca/ca.crt"
      client_cert_required: true

# ═══════════════════════════════════════════════════════════════════════════════
# STORAGE CONFIGURATION
# Database and data retention settings
# ═══════════════════════════════════════════════════════════════════════════════
storage:
  # Database file path (:memory: for in-memory database)
  database_path: ":memory:"

  # Data retention policies
  retention:
    # Raw metrics retention (high frequency data)
    raw: "24h"

    # Minute-aggregated data retention
    minute: "168h"  # 7 days

    # Hour-aggregated data retention
    hour: "8760h"   # 365 days

  # Database performance settings
  performance:
    # SQLite connection pool size
    max_connections: 10

    # Connection idle timeout
    connection_timeout: "30s"

    # SQLite pragma settings
    pragma:
      journal_mode: "WAL"
      synchronous: "NORMAL"
      cache_size: 10000
      temp_store: "MEMORY"

# ═══════════════════════════════════════════════════════════════════════════════
# PHP-FPM GLOBAL CONFIGURATION
# Global PHP-FPM settings and file paths
# ═══════════════════════════════════════════════════════════════════════════════
phpfpm:
  # Path to the main PHP-FPM configuration file
  global_config_path: "/opt/phpfpm-runtime-manager/php-fpm.conf"

  # PHP-FPM binary path (auto-detected if not specified)
  binary_path: "/usr/sbin/php-fpm"

  # Global settings that apply to all pools
  global_settings:
    # Emergency restart threshold
    emergency_restart_threshold: 10

    # Emergency restart interval
    emergency_restart_interval: "1m"

    # Process control timeout
    process_control_timeout: "10s"

# ═══════════════════════════════════════════════════════════════════════════════
# POOL CONFIGURATIONS
# Individual PHP-FPM pool settings
# ═══════════════════════════════════════════════════════════════════════════════
pools:
  # Web frontend pool - high traffic, dynamic scaling
  - name: "web"
    # Optional: Path to separate pool config file
    # If omitted, pool is configured inline in global_config_path
    config_path: "/opt/phpfpm-runtime-manager/pools.d/web.conf"

    # FastCGI endpoint (Unix socket or TCP)
    # Unix socket: "unix:/opt/phpfpm-runtime-manager/sockets/web.sock" (recommended)
    # TCP format: "127.0.0.1:9000" or "hostname:port"
    fastcgi_endpoint: "unix:/opt/phpfpm-runtime-manager/sockets/web.sock"

    # FastCGI status page path
    fastcgi_status_path: "/status"

    # Maximum number of worker processes
    max_workers: 20

    # Health check configuration
    health_check:
      enabled: true
      interval: "30s"
      timeout: "5s"
      retries: 3
      ping_path: "/ping"
      expected_response: "pong"

    # Resource limits and thresholds
    resources:
      # CPU usage threshold (0-100%)
      cpu_threshold: 80.0

      # Memory usage threshold (bytes)
      memory_threshold: 134217728  # 128MB

      # Request processing time threshold
      request_time_threshold: "5s"

    # Automatic scaling configuration
    scaling:
      enabled: true

      # Scaling strategy: dynamic, static, ondemand
      strategy: "dynamic"

      # Minimum spare servers
      min_spare: 3

      # Maximum spare servers
      max_spare: 8

      # Scale up threshold (CPU %)
      scale_up_threshold: 70.0

      # Scale down threshold (CPU %)
      scale_down_threshold: 30.0

      # Cooldown period between scaling actions
      cooldown: "5m"

  # API backend pool - moderate traffic, optimized for API responses
  - name: "api"
    config_path: "/opt/phpfpm-runtime-manager/pools.d/api.conf"
    fastcgi_endpoint: "unix:/opt/phpfpm-runtime-manager/sockets/api.sock"
    fastcgi_status_path: "/status"
    max_workers: 15

    health_check:
      enabled: true
      interval: "30s"
      timeout: "3s"
      retries: 2

    resources:
      cpu_threshold: 75.0
      memory_threshold: 67108864  # 64MB
      request_time_threshold: "2s"

    scaling:
      enabled: true
      strategy: "dynamic"
      min_spare: 2
      max_spare: 5

  # Admin panel pool - low traffic, static scaling
  - name: "admin"
    fastcgi_endpoint: "unix:/opt/phpfpm-runtime-manager/sockets/admin.sock"
    fastcgi_status_path: "/status"
    max_workers: 5

    health_check:
      enabled: true
      interval: "60s"
      timeout: "10s"
      retries: 1

    resources:
      cpu_threshold: 60.0
      memory_threshold: 33554432  # 32MB
      request_time_threshold: "10s"

    scaling:
      enabled: false
      strategy: "static"

# ═══════════════════════════════════════════════════════════════════════════════
# MONITORING CONFIGURATION
# Metrics collection and performance optimization
# ═══════════════════════════════════════════════════════════════════════════════
monitoring:
  # How often to collect metrics from PHP-FPM pools
  collect_interval: "1s"

  # Health check interval (deprecated, use per-pool settings)
  health_check_interval: "30s"

  # Enable detailed metrics collection
  detailed_metrics: true

  # Performance optimizations
  string_interning:
    # Enable string interning for metric labels
    enabled: true

    # Maximum capacity of the string pool
    capacity: 256

    # Cleanup interval for unused strings
    cleanup_interval: "5m"

  json_pooling:
    # Enable JSON buffer pooling
    enabled: true

    # Initial buffer size (bytes)
    buffer_size: 1024

    # Maximum buffer size before reset
    max_buffer_size: 65536

  batching:
    # Enable metric batching for efficiency
    enabled: true

    # Batch size (number of metrics)
    size: 50

    # Flush timeout (send partial batches)
    flush_timeout: "5s"

  # Circuit breaker for resilience
  circuit_breaker:
    enabled: true

    # Failure threshold to open circuit
    failure_threshold: 5

    # Success threshold to close circuit
    success_threshold: 3

    # Timeout before trying to close circuit
    timeout: "30s"

# ═══════════════════════════════════════════════════════════════════════════════
# LOGGING CONFIGURATION
# Application logging and output formatting
# ═══════════════════════════════════════════════════════════════════════════════
logging:
  # Log level: debug, info, warn, error
  level: "info"

  # Log format: json, text, console
  format: "json"

  # Log output destination
  output: "stdout"  # Options: stdout, stderr, file path

  # Log file settings (when output is a file path)
  file:
    # Log file path
    path: "/var/log/phpfpm-runtime-manager/app.log"

    # Maximum file size before rotation
    max_size: "100MB"

    # Maximum number of old files to keep
    max_backups: 3

    # Maximum age of old files
    # max_age is not supported in current config structure

    # Compress old files
    compress: true

  # Enable request/response logging
  request_logging:
    enabled: false

    # Include request headers
    include_headers: false

    # Include request body (sensitive data warning)
    include_body: false

# ═══════════════════════════════════════════════════════════════════════════════
# OBSERVABILITY CONFIGURATION
# Distributed tracing and advanced monitoring
# ═══════════════════════════════════════════════════════════════════════════════
observability:
  # OpenTelemetry configuration
  tracing:
    enabled: false

    # OTLP endpoint for traces
    endpoint: "http://localhost:4317"

    # Service name for traces
    service_name: "phpfpm-runtime-manager"

    # Sampling ratio (0.0 to 1.0)
    sampling_ratio: 0.1

    # Headers for authentication
    headers:
      authorization: "Bearer your-token-here"

  # Metrics export configuration
  metrics_export:
    # Export to external systems
    enabled: false

    # Export interval
    interval: "30s"

    # Prometheus remote write endpoints
    prometheus:
      - url: "http://prometheus:9090/api/v1/write"
        headers:
          authorization: "Bearer token"

# ═══════════════════════════════════════════════════════════════════════════════
# ALERTING CONFIGURATION
# Alert rules and notification settings
# ═══════════════════════════════════════════════════════════════════════════════
alerting:
  enabled: false

  # Alert rules
  rules:
    # High CPU usage alert
    - name: "high_cpu_usage"
      condition: "cpu_usage > 80"
      duration: "5m"
      severity: "warning"
      message: "Pool {{ .pool }} CPU usage is {{ .value }}%"

    # Pool down alert
    - name: "pool_down"
      condition: "pool_status == 0"
      duration: "1m"
      severity: "critical"
      message: "Pool {{ .pool }} is not responding"

  # Notification channels
  notifications:
    # Webhook notifications
    webhook:
      enabled: false
      url: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
      timeout: "10s"

    # Email notifications (requires SMTP configuration)
    email:
      enabled: false
      smtp_host: "smtp.example.com"
      smtp_port: 587
      username: "alerts@example.com"
      password: "password"
      from: "phpfpm-alerts@example.com"
      to: ["admin@example.com"]

# ═══════════════════════════════════════════════════════════════════════════════
# SECURITY CONFIGURATION
# Security policies and access control
# ═══════════════════════════════════════════════════════════════════════════════
security:
  # Network access controls
  allow_internal_networks: false  # Set to true for Docker/container deployments
  allowed_networks: []           # Optional: specific networks to allow
  allowed_schemes: ["http", "https"]  # Allowed URL schemes

  # Input validation limits
  max_pool_name_length: 64      # Maximum pool name length
  max_api_key_length: 128       # Maximum API key length
  max_event_summary_length: 1024 # Maximum event summary length

  # Rate limiting
  rate_limiting:
    enabled: false

    # Requests per minute per IP
    requests_per_minute: 60

    # Burst allowance
    burst: 10

  # CORS configuration
  cors:
    enabled: false

    # Allowed origins
    allowed_origins: ["*"]

    # Allowed methods
    allowed_methods: ["GET", "POST", "OPTIONS"]

    # Allowed headers
    allowed_headers: ["Authorization", "Content-Type"]

  # Request validation
  validation:
    # Maximum request size
    max_request_size: "1MB"

    # Request timeout
    timeout: "30s"

    # Enable request sanitization
    sanitize_requests: true