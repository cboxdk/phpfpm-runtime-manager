package platform

import (
	"os"
)

// RealFileSystemProvider implements FileSystemProvider using real OS operations
type RealFileSystemProvider struct{}

// ReadFile reads a file using os.ReadFile
func (fs *RealFileSystemProvider) ReadFile(path string) ([]byte, error) {
	return os.ReadFile(path)
}

// WriteFile writes a file using os.WriteFile
func (fs *RealFileSystemProvider) WriteFile(path string, data []byte, perm FileMode) error {
	return os.WriteFile(path, data, os.FileMode(perm))
}

// Exists checks if a path exists
func (fs *RealFileSystemProvider) Exists(path string) (bool, error) {
	_, err := os.Stat(path)
	if err == nil {
		return true, nil
	}
	if os.IsNotExist(err) {
		return false, nil
	}
	return false, err
}

// IsDir checks if path is a directory
func (fs *RealFileSystemProvider) IsDir(path string) (bool, error) {
	info, err := os.Stat(path)
	if err != nil {
		return false, err
	}
	return info.IsDir(), nil
}

// MkdirAll creates directory structure
func (fs *RealFileSystemProvider) MkdirAll(path string, perm FileMode) error {
	return os.MkdirAll(path, os.FileMode(perm))
}

// GetProvider returns the provider type
func (fs *RealFileSystemProvider) GetProvider() string {
	return "real"
}