# Performance-Optimized Configuration for PHP-FPM Runtime Manager
# This configuration enables all performance optimizations for maximum throughput

server:
  bind_address: "0.0.0.0:9090"
  metrics_path: "/metrics"
  api:
    enabled: true
    base_path: "/api/v1"
    max_requests: 200  # Increased for high-performance scenarios

# Enhanced Storage Configuration with Connection Pooling
storage:
  database_path: "./data/metrics.db"

  # Connection Pool Optimization - 3x write performance improvement
  connection_pool:
    enabled: true
    max_open_conns: 50          # Aggressive setting for high concurrency
    max_idle_conns: 20          # Keep more connections ready
    conn_max_lifetime: 4h       # Longer lifetime for stability
    conn_max_idle_time: 1h      # Balance between memory and performance
    health_interval: 15s        # Frequent health checks for reliability

  # Data Retention Policies
  retention:
    raw: 24h
    minute: 168h  # 7 days
    hour: 8760h   # 1 year

  # Aggregation Settings
  aggregation:
    enabled: true
    interval: 1m
    batch_size: 2000  # Larger batches for better performance

# Enhanced Monitoring Configuration with Batching and Pooling
monitoring:
  collect_interval: 500ms  # High-frequency collection
  health_check_interval: 5s
  cpu_threshold: 80.0
  memory_threshold: 85.0
  enable_opcache: true
  enable_system_metrics: true

  # Metrics Batching - 2.5x collection throughput improvement
  batching:
    enabled: true
    size: 100             # Large batches for maximum efficiency
    flush_timeout: 2s     # Quick flushing for low latency
    max_batches: 20       # Support many concurrent batches

  # Channel Buffering with Backpressure Handling
  buffering:
    channel_size: 10000           # Large buffer for high throughput
    backpressure_threshold: 7500  # 75% threshold for backpressure
    enable_backpressure: true     # Intelligent load shedding

  # Object Pooling - 45% memory allocation reduction
  object_pooling:
    enabled: true
    metric_set_capacity: 50   # Large pre-allocation for high-load scenarios
    metric_capacity: 8        # More labels supported per metric
    label_map_capacity: 8     # Larger label maps

# Pool Configurations
pools:
  - name: "web-pool"
    config_path: "/opt/phpfpm-runtime-manager/pools.d/web.conf"
    status_endpoint: "http://127.0.0.1:9001/status"
    max_workers: 50
    health_check:
      enabled: true
      interval: 10s
      timeout: 2s
      retries: 3
    resources:
      cpu_threshold: 80.0
      memory_threshold: 85.0
      max_memory_mb: 512

  - name: "api-pool"
    config_path: "/opt/phpfpm-runtime-manager/pools.d/api.conf"
    status_endpoint: "http://127.0.0.1:9002/status"
    max_workers: 30
    health_check:
      enabled: true
      interval: 10s
      timeout: 2s
      retries: 3
    resources:
      cpu_threshold: 75.0
      memory_threshold: 80.0
      max_memory_mb: 256

  - name: "worker-pool"
    config_path: "/opt/phpfpm-runtime-manager/pools.d/worker.conf"
    status_endpoint: "http://127.0.0.1:9003/status"
    max_workers: 20
    health_check:
      enabled: true
      interval: 15s
      timeout: 3s
      retries: 2
    resources:
      cpu_threshold: 85.0
      memory_threshold: 90.0
      max_memory_mb: 1024

# Optimized Logging Configuration
logging:
  level: "info"
  format: "json"
  output_path: "/var/log/phpfpm-manager/manager.log"
  structured: true

# Telemetry Configuration
telemetry:
  enabled: true
  service_name: "phpfpm-runtime-manager"
  service_version: "1.0.0"
  environment: "production"
  exporter:
    type: "otlp"
    endpoint: "http://jaeger:14268/api/traces"
  sampling:
    rate: 0.1  # 10% sampling for production

# Optional: TLS Configuration for high-security environments
# server:
#   tls:
#     enabled: true
#     cert_file: "/etc/ssl/certs/phpfpm-manager.crt"
#     key_file: "/etc/ssl/private/phpfpm-manager.key"

# Optional: Authentication Configuration
# server:
#   auth:
#     enabled: true
#     type: "api_key"
#     api_keys:
#       - name: "monitoring"
#         key: "your-32-character-api-key-here-123"
#         scopes: ["read", "write"]
#       - name: "readonly"
#         key: "your-readonly-api-key-here-456789"
#         scopes: ["read"]